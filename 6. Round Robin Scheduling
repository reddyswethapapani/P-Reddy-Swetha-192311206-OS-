#include<stdio.h>
#define MAX 100
int main()
{
	int n,done=0,time=0,quantum,i;
	int arrival[MAX],burst[MAX],remaining[MAX],wait[MAX]={0},turnaround[MAX];
	float avg_wait=0,avg_turnaround=0;
	printf("enter the no of process :");
	scanf("%d",&n);
	printf("enter the arrivals times :");
	for(i=0;i<n;i++)
	{
		scanf("%d",&arrival[i]);
	}
	printf("enter the burst times :");
	for(i=0;i<n;i++)
	{
	scanf("%d",&burst[i]);
	remaining[i]=burst[i];
	}
	printf("enter the quantum :");
	scanf("%d",&quantum);
	while(done<n)
	{
		for(i=0;i<n;i++)
		{
			if(remaining[i]>0 && arrival[i]<=time)
			{
				int rem=(remaining[i]>quantum)?quantum:remaining[i];
				remaining[i]-=rem;
				time+=rem;
				if(remaining[i]==0)
				{
					turnaround[i]=time-arrival[i];
					wait[i]=turnaround[i]-burst[i];
					avg_wait+=wait[i];
					avg_turnaround+=turnaround[i];
					done++;
				}
			}
		}
	}
	printf("\nprocess\tarrival\tburst\tturnaround\twaiting");
	for(i=0;i<n;i++)
	{
		printf("%d\t%d\t%d\t%d\t%d\n ",i+1,arrival[i],burst[i],turnaround[i],wait[i]);
	}
	printf("average waiting time : %f",avg_wait/n);
	printf("average turn around time : %f",avg_turnaround/n);
	return 0;
}
