#include <stdio.h>
void calculate(int pid[], int bt[], int wt[], int tat[], int at[], int n) 
{
    int ct[n]; 
    for (int i = 0; i < n - 1; i++) 
	{
        for (int j = 0; j < n - i - 1; j++) 
		{
            if (at[j] > at[j + 1])
			 {
                int temp = at[j];
                at[j] = at[j + 1];
                at[j + 1] = temp;
                
                temp = bt[j];
                bt[j] = bt[j + 1];
                bt[j + 1] = temp;
                
                temp = pid[j];
                pid[j] = pid[j + 1];
                pid[j + 1] = temp;
            }
        }
    }
    ct[0] = at[0] + bt[0];
    tat[0] = ct[0] - at[0];
    wt[0] = tat[0] - bt[0];
    for (int i = 1; i < n; i++)
	 {
        if (ct[i - 1] < at[i]) 
		{
            ct[i] = at[i] + bt[i];
        } 
		else
		 {
            ct[i] = ct[i - 1] + bt[i];
        }
        tat[i] = ct[i] - at[i];
        wt[i] = tat[i] - bt[i];
    }
}
void display(int pid[], int bt[], int wt[], int tat[], int at[], int n) {
    printf("\nProcess   Arrival Time   Burst Time   Waiting Time   Turnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t     %d\t         %d\t         %d\t          %d\n", pid[i], at[i], bt[i], wt[i], tat[i]);
    }
}
int main() {
    int n;
    printf("Enter number of processes: ");
    scanf("%d", &n);
    int pid[n], bt[n], wt[n], tat[n], at[n];
    printf("Enter arrival and burst times of processes:\n");
    for (int i = 0; i < n; i++) {
        pid[i] = i + 1;
        printf("Process %d:\n", i + 1);
        printf("Arrival time: ");
        scanf("%d", &at[i]);
        printf("Burst time: ");
        scanf("%d", &bt[i]);
    }
    calculate(pid, bt, wt, tat, at, n);
    display(pid, bt, wt, tat, at, n);
    return 0;
}
