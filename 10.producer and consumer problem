#include<stdio.h>
#include<pthread.h>
#include<semaphore.h>
#include<unistd.h>
#define buffer_size 5
int buffer[buffer_size];
int in=0,out=0; 
sem_t empty,full,mutex;
void *producer(void *arg) 
{
    int item=0;
    while(1)
	{
        sem_wait(&empty);
        sem_wait(&mutex);

        buffer[in]=++item;
        printf("Produced: %d\n",item);
        in=(in+1)%buffer_size;
        sem_post(&mutex);
        sem_post(&full);
        sleep(1);
    }
}
void *consumer(void *arg)
{
    while (1)
	{
        sem_wait(&full);
        sem_wait(&mutex);
        printf("Consumed: %d\n", buffer[out]);
        out = (out+1)%buffer_size;
        sem_post(&mutex);
        sem_post(&empty);
        sleep(2);
    }
}
int main()
{
    pthread_t prod,cons;
    sem_init(&empty,0,buffer_size);
    sem_init(&full,0,0);         
    sem_init(&mutex,0,1); 
    pthread_create(&prod,NULL,producer,NULL);
    pthread_create(&cons,NULL,consumer,NULL);
    pthread_join(prod,NULL);
    pthread_join(cons,NULL);
}
